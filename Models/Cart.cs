//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace B2C_Ecomerce_Website.Models
{
    using System;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Data.SqlClient;

    public partial class Cart
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Cart()
        {
            this.CartDetails = new HashSet<CartDetail>();
        }
    
        public string CartID { get; set; }
        public string CustomerID { get; set; }
        public Nullable<decimal> TotalBill { get; set; }
        public Nullable<bool> CartDeleted { get; set; }
    
        public virtual Customer Customer { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CartDetail> CartDetails { get; set; }

        public Cart SelectAgentCartQuery(string customerId)
        {
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["DBConn"].ToString()))
            {
                conn.Open();
                string sql = "select * from Cart where CustomerID = '" + customerId + "'";
                SqlCommand cmd = new SqlCommand(sql, conn);

                Cart res = new Cart();
                SqlDataReader dr = cmd.ExecuteReader();
                while (dr.Read())
                {
                    res.CartID = dr["CartID"].ToString();
                    res.CustomerID = dr["CustomerID"].ToString();
                    res.TotalBill = Convert.ToDecimal(dr["TotalBill"].ToString());
                }
                conn.Close();
                return res;
            }
        }

        public void AddCartQuery(string cartID, string customerId)
        {
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["DBConn"].ToString()))
            {
                conn.Open();
                string sql = "insert into Cart values ('" +
                    cartID +
                    "', '" + customerId +
                    "', " + 0 +
                    ", " + 0 + ")";
                SqlCommand cmd = new SqlCommand(sql, conn);
                cmd.ExecuteNonQuery();
            }
        }

        private string GetCartDesc()
        {
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["DBConn"].ToString()))
            {
                conn.Open();
                string sql = "select top 1 CartID from Cart order by CartID desc";
                SqlCommand cmd = new SqlCommand(sql, conn);

                SqlDataReader dr = cmd.ExecuteReader();
                string res = "";
                while (dr.Read())
                {
                    res = dr["CartID"].ToString();
                }
                conn.Close();
                return res;
            }
        }

        public string GetNewCartID()
        {
            string res = GetCartDesc();
            if (res != null && !res.Equals(""))
            {
                int order = int.Parse(res.Substring(4)) + 1;
                if (order < 10)
                {
                    res = "CCTD00000" + order.ToString();
                }
                else if (order < 100)
                {
                    res = "CCTD0000" + order.ToString();
                }
                else if (order < 1000)
                {
                    res = "CCTD000" + order.ToString();
                }
                else if (order < 10000)
                {
                    res = "CCTD00" + order.ToString();
                }
                else if (order < 100000)
                {
                    res = "CCTD0" + order.ToString();
                }
                else
                {
                    res = "CCTD" + order.ToString();
                }
                return res;
            }
            else
            {
                return "CCTD000001";
            }
        }
    }
}
